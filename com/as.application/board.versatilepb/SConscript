import os
from building import *

cwd = GetCurrentDir()

Import('asenv')
ASROOT = asenv['ASROOT']

print('qemu run command:scons versatilepb run\nqemu debug command: scons versatilepb run gdb')
if('run' in COMMAND_LINE_TARGETS):
    qemu = '%s/release/download/qemu/arm-softmmu/qemu-system-arm'%(ASROOT)
    target = '%s/release/ascore/versatilepb'%(ASROOT)

    if(not os.path.exists(qemu)):
        os.system('cd %s/release/ascore/ && make asqemu'%(ASROOT))

    build = '%s/release/ascore/build/versatilepb'%(ASROOT)
    if(not os.path.exists('%s/asblk0.img'%(build))):
        os.system('dd if=/dev/zero of=%s/asblk0.img bs=1M count=32'%(build))
        os.system('sudo mkfs.fat %s/asblk0.img'%(build))
    if(not os.path.exists('%s/asblk1.img'%(build))):
        os.system('dd if=/dev/zero of=%s/asblk1.img bs=1M count=32'%(build))
        os.system('sudo mkfs.ext4 -b 4096 %s/asblk1.img'%(build))
    params = '-m 128 -M versatilepb -nographic -serial tcp:127.0.0.1:1103,server'
    params += ' -device pci-ascan -device pci-asnet -device pci-asblk'
    if('gdb' in COMMAND_LINE_TARGETS):
        params += ' -gdb tcp::1234 -S'
    fp = open('%s/telnet.sh'%(build),'w')
    fp.write('sleep 0.5\ntelnet 127.0.0.1 1103\n')
    fp.close()
    fp = open('%s/qemu.sh'%(build),'w')
    fp.write('%s -m 128 -M versatilepb -kernel %s %s & sh %s/telnet.sh'%(qemu,target,params,build))
    fp.close()
    os.system('sudo pgrep qemu-system-arm | xargs -i kill -9 {}')
    os.system('cd %s && chmod +x %s/*.sh && sudo gnome-terminal -x %s/qemu.sh'%(build,build,build))
    exit(0)

objs = []

objs += Glob('%s/../board.bcm2835/common/*.c'%(cwd))

asenv.Append(CCFLAGS=' -I%s/../board.bcm2835/common '%(cwd))

asenv.Append(CCFLAGS=' -DconfigTOTAL_HEAP_SIZE=0x800000 ')
asenv.Append(CCFLAGS=' -DMEMORY_SIZE=0x8000000 ')
asenv.Append(CCFLAGS=' -DSYSTEM_REGION_START=0x10000000 ')
asenv.Append(CCFLAGS=' -DSYSTEM_REGION_END=0x101f4000 ')
asenv.Append(CCFLAGS=' -DPAGE_SIZE=0x1000 ')

#lds = '%s/../board.bcm2835/script/linker-app.lds'%(cwd)
lds = '%s/com/as.infrastructure/arch/bcm2835/bsp/linker.lds'%(ASROOT)
asenv.Append(LINKFLAGS=' -static -T %s '%(lds))
asenv.Append(LINKFLAGS='-Map build/versatilepb/versatilepb.map')

MODULES = ['ECUM','SCHM','MCU',
           'DET',
           'CAN','CANIF','PDUR','COM','COMM','CANTP','CANNM',
           'DCM','CANNM','CANSM','NM','OSEKNM','XCP',
           'SOAD','DOIP','LWIP','PCI',
           ]

if(asenv['RTOS'] != 'rtthread'):
    MODULES += ['FATFS','LWEXT4',
           'CLIB_ASHEAP','CLIB_MISCLIB','CLIB_STDIO_PRINTF',
           'CLIB_MBOX','CLIB_QSORT',
           ]
else:
    asenv.Append(CCFLAGS='-DRT_HEAP_SIZE=0x800000')

ARCH='versatilepb'
arch='arm'

asenv['MODULES'] = MODULES
asenv['ARCH'] = ARCH
asenv['arch'] = arch

Return('objs')
