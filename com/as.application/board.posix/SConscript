import os
from building import *

cwd = GetCurrentDir()

Import('asenv')
ASROOT = asenv['ASROOT']

print('native run command:scons run')
if('run' in COMMAND_LINE_TARGETS):
    if(os.name == 'nt'):
        RunCommand('start %s/com/as.tool/lua/can/socketwin_can_driver.exe 0'%(ASROOT))
        RunCommand('start %s/com/as.tool/lua/can/socketwin_can_driver.exe 1'%(ASROOT))
    target = '%s/release/%s/posix'%(ASROOT,asenv['RELEASE'])
    build = '%s/release/%s/build/posix'%(ASROOT,asenv['RELEASE'])
    RunCommand('cd %s && %s'%(build,target))
    exit(0)

objs = []

objs += Glob('common/*.c')
objs += Glob('simulator/*.c')
objs += Glob('simulator/*.xml')
SrcRemove(objs, 'Ipc_Cfg.c')

asenv.Append(CCFLAGS=' -I%s/common '%(cwd))

MODULES = ['ECUM','SCHM','MCU',
           'DET','DEM',
           'CAN','CANIF','PDUR','COM','COMM','CANTP',
           'DCM','CANNM','CANSM','NM','OSEKNM','XCP',
           'PORT','DIO','EEP','FLS','STMO',
           'EA','FEE','MEMIF','NVM',
           'AWS','LCD',
           ]

ARCH='posix'
arch='posix'

MODULES += ['SOAD','DOIP','LWIP']

if(os.name != 'nt'):
    MODULES += ['FATFS','LWEXT4',]
else:
    MODULES += ['CLIB_STRTOK_R']

MODULES += ['CLIB_MBOX']

MODULES += ['RTE','RTE_SWC_TELLTALE']

if(cwd.find('travis') != -1):
    # this is on travis, GUI is not possible as rely on QT to generate pictures to C source code
    MODULES.remove('LCD')
else:
    if(os.getenv('GUI') in ['GTK','OPENVG']):
        MODULES.append(os.getenv('GUI'))
    else:
        print('WARNING: use default GTK GUI for posix')
        MODULES.append('GTK')

    MODULES.append('SG')

# post special process for asboot release
if(asenv['RELEASE']=='asboot'):
    MODULES = ['ECUM','SCHM','MCU','DET',
               'CAN','CANIF','PDUR','CANTP',
               'DCM',
               'FLASH',
               ]

asenv['MODULES'] = MODULES
asenv['ARCH'] = ARCH
asenv['arch'] = arch

if(asenv['RTOS'] != 'small'):
    print('WARNING: force RTOS to "small" instead of "%s"'%(asenv['RTOS']))
    asenv['RTOS']='small'

Return('objs')
