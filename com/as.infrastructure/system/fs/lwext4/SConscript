import os
from building import *

cwd = GetCurrentDir()

Import('asenv')
ASROOT = asenv['ASROOT']

download = '%s/release/download'%(ASROOT)
lwext4='%s/lwext4'%(download)

if(not os.path.exists(lwext4)):
    MKDir(download)
    RunCommand('''cd %s && git clone https://github.com/gkostka/lwext4.git &&
        sed -i "156c /*fflush(stdout);*/ \\\\\\\\" lwext4/include/ext4_debug.h'''%(download))

MKSymlink(lwext4,'%s/lwext4'%(cwd))

if((os.name == 'nt') and asenv['msys2'] and 
   not os.path.exists('%s/build_generic'%(lwext4))):
    RunCommand('cd %s/lwext4 && make && cd build_generic && make'%(download))

objs = []

objs += Glob('lwext4/src/*.c')

asenv.Append(CCFLAGS = '-I%s/lwext4/include'%(cwd))
asenv.Append(CCFLAGS = '-DCONFIG_USE_DEFAULT_CFG')
if(asenv['RTOS'] != 'rtthread'):
    asenv.Append(CCFLAGS = '-DUSE_LWEXT4')
else:
    objs += Glob('*.c')
    asenv.Append(CCFLAGS = '-I%s'%(cwd))

if(asenv['BOARD']=='posix'):
    if(os.name == 'nt'):
        objs += Glob('lwext4/blockdev/windows/*.c')
        asenv.Append(CCFLAGS = '-I%s/lwext4/blockdev/windows'%(cwd))
    else:
        objs += Glob('lwext4/blockdev/linux/*.c')
        asenv.Append(CCFLAGS = '-I%s/lwext4/blockdev/linux'%(cwd))

Return('objs')
