# scons for asboot
import os
import sys
studio=os.path.abspath('../../com/as.tool/config.infrastructure.system/')
sys.path.append(studio)
import xcc
import argen
from building import *

ASROOT=os.path.abspath('%s/../..'%(os.curdir))
BOARD=None

asenv=Environment()
asenv['ASROOT'] = ASROOT
asenv['RELEASE'] = 'asboot'

PrepareBuilding(asenv)

board_list = []
for dir in os.listdir('%s/com/as.application'%(ASROOT)):
    if(dir[:6]=='board.' and 
       os.path.exists('%s/com/as.application/%s/SConscript'%(ASROOT,dir))):
        board_list.append(dir[6:])

def help():
    print('Usage:scons board [studio]\n\tboard:%s'%(board_list))
    print('  studio: optional for launch studio GUI tool')

if('help' in COMMAND_LINE_TARGETS):
    help()
    exit(0)
else:
    for b in COMMAND_LINE_TARGETS:
        if(b in board_list):
            BOARD = b

if(os.name == 'nt'):
    if(os.getenv('BOARD') in board_list):
        BOARD = os.getenv('BOARD')

asenv['RTOS']='small'
print('RTOS is %s'%(asenv['RTOS']))

if(BOARD is None):
    print('Error: no BOARD specified!')
    if(os.name=='nt'):
        print('use DOS "set" command to set BOARD\n\tfor example: set BOARD=posix')
    help()
    exit(-1)

asenv['BOARD'] = BOARD
Export('asenv')

bdir = 'build/%s'%(BOARD)
objs = []
xmls = []

sobjs = SConscript('%s/com/SConscript'%(ASROOT),variant_dir=bdir, duplicate=0)
arxml= None

for obj in sobjs:
    if(str(obj)[-6:]=='.arxml'):
        if(arxml is None):
            arxml = obj
        else:
            raise Exception('too much arxml specified! [%s %s]'%(arxml,obj))
    elif(str(obj)[-4:]=='.xml'):
        xmls.append(obj)
    else:
        objs.append(obj)

if('studio' in COMMAND_LINE_TARGETS):
    assert(arxml)
    pd = os.path.dirname(str(arxml))
    RunCommand('cd %s && %s studio.py %s'%(studio,asenv['python3'],pd))
    exit(0)

cfgdir = '%s/config'%(bdir)
cfgdone = '%s/config.done'%(cfgdir)
if((not os.path.exists(cfgdone)) and (not asenv.GetOption('clean'))):
    MKDir(cfgdir)
    for xml in xmls:
        MKSymlink(str(xml),'%s/%s'%(cfgdir,os.path.basename(str(xml))))
    MKSymlink(str(arxml),'%s/%s'%(cfgdir,os.path.basename(str(arxml))))
    xcc.XCC(cfgdir)
    argen.ArGen.ArGenMain(str(arxml),cfgdir)
    MKFile(cfgdone)

objs += Glob('%s/*.c'%(cfgdir))
asenv.Append(CCFLAGS='-I%s'%(cfgdir))
asenv.Append(ASFLAGS='-I%s'%(cfgdir))

if(asenv.GetOption('clean')):
    RMDir(cfgdir)

asenv.Program(BOARD,objs)
